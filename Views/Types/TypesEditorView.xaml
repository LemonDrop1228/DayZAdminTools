<views:BaseView x:Class="DayZTediratorToolz.Views.TypesEditorView"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:local="clr-namespace:DayZTediratorToolz.Views"
			 xmlns:views="clr-namespace:DayZTediratorToolz.Views"
			 xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
			 xmlns:tz="http://schemas.abtsoftware.co.uk/transitionz"  xmlns:st="http://schemas.spicytaco.io/"
			 xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
			 xmlns:converters="clr-namespace:DayZTediratorToolz.Converters"
			 xmlns:customControls="clr-namespace:DayZTediratorToolz.Helpers.CustomControls"
			 tz:Transitionz.Opacity="{tz:OpacityParams From=0, To=1, Duration=200, TransitionOn=Loaded}"
			 tz:Transitionz.Translate="{tz:TranslateParams From='10,0', To='0,0', Duration=200, TransitionOn=Loaded}"
			 mc:Ignorable="d"
			 d:DesignHeight="575" d:DesignWidth="850" Background="{x:Null}" >
	<UserControl.Resources>
		<converters:OneZeroToBooleanConverter x:Key="OneZeroToBooleanConverter" />
		<converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
		<converters:TypeToolBooleanConverter x:Key="TypeToolBooleanConverter" />
		<converters:ValueIndexConverter x:Key="ValueIndexConverter"/>
	</UserControl.Resources>
	<Grid>
	<materialDesign:Card Background="#FF3A4755" Padding="3">
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="0.15*" MinHeight="150"/>
				<RowDefinition />
			</Grid.RowDefinitions>

				<customControls:FileInput
					Margin="16"
					x:Name="FileInputControl"
					IsBusy="{Binding IsProcessingTypes}"
					Title="{Binding ViewMenuData.ViewLabel}"
					LocalPathType="Xml"
					PathBoxHint="Types XML File Path"
					DialogTitle="{DynamicResource TypesEditorView_DialogTitle}"
					FileOpened="FileInputControl_OnFileOpened"
					FileSaved="FileInputControl_OnFileSaved"
					FileExported="FileInputControl_OnFileExported">
				</customControls:FileInput>


			<Grid Grid.Row="1">
				<Grid >
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="1.45*"/>
						<ColumnDefinition />
					</Grid.ColumnDefinitions>

					<GroupBox
						Background="{DynamicResource MaterialDesignDarkBackground}"
						materialDesign:ThemeAssist.Theme="Dark"
						Header="Card Group Box"
						Style="{DynamicResource MaterialDesignCardGroupBox}"
						Margin="16">
						<GroupBox.HeaderTemplate>
							<DataTemplate>
								<Grid>
									<StackPanel Margin="0 12"
									            HorizontalAlignment="Left"
									            Orientation="Horizontal">
										<materialDesign:PackIcon
											Kind="Sack"
											Height="21"
											Width="21"
											VerticalAlignment="Center" />
										<TextBlock
											Margin="8,0,0,0"
											VerticalAlignment="Center"
											FontWeight="Medium" FontSize="18" FontFamily="Roboto"
											Text="Types Data" />
									</StackPanel>
								</Grid>
							</DataTemplate>
						</GroupBox.HeaderTemplate>
						<materialDesign:Card Background="#2F3846" Padding="3">
							<Grid>
								<syncfusion:SfDataGrid
									Grid.RowSpan="{Binding IsDataPagedGridRowSpan}"
									SelectionChanged="TypesGrid_OnSelectionChanged"
									BorderThickness="0"
									x:Name="TypesGrid"
									Margin="3"
									AllowFiltering="True"
									AllowResizingColumns="True"
									ItemsSource="{Binding Path=CurrentTypeSlice}"
									Background="{x:Null}"
									AutoGenerateColumnsForCustomType="True"
									AutoGenerateColumnsModeForCustomType="Child"
									FrozenColumnCount="2"
									AllowEditing="False"
									ScrollMode="Async"
									SelectionMode="Extended"
									Visibility="{Binding IsDataLoaded, Converter={StaticResource BooleanToVisibilityConverter}}"
									AllowDeleting="False"
									AddNewRowPosition="None"
									AllowGrouping="True"
									ShowColumnWhenGrouped="False"
									AutoGeneratingColumn="TypesGrid_OnAutoGeneratingColumn">
									<syncfusion:SfDataGrid.Columns>
										<syncfusion:GridCheckBoxSelectorColumn MappingName="SelectorColumn"
										                                       Width="30" />
									</syncfusion:SfDataGrid.Columns>

								</syncfusion:SfDataGrid>
								<ItemsControl
									Visibility="{Binding IsDataPaged, Converter={StaticResource BooleanToVisibilityConverter}}"
									Grid.Row="2"
									ItemsSource="{Binding TypeCollection}"
									AlternationCount="{Binding TypeCollection.Count}">
									<ItemsControl.ItemTemplate>
										<DataTemplate>
											<Button Margin="11 2"
											        Command="{Binding Path=SelectSlice,
															   RelativeSource={RelativeSource
															   AncestorType={x:Type local:TypesEditorView}}}"
											        CommandParameter="{Binding DataContext, RelativeSource={RelativeSource Self}}">
												<Button.Content>
													<MultiBinding Converter="{StaticResource ValueIndexConverter}">
														<Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}" />
														<Binding Path="."/>
													</MultiBinding>
												</Button.Content>
											</Button>
										</DataTemplate>
									</ItemsControl.ItemTemplate>

									<ItemsControl.ItemsPanel>
										<ItemsPanelTemplate>
											<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="3"/>
										</ItemsPanelTemplate>
									</ItemsControl.ItemsPanel>
								</ItemsControl>
							</Grid>
							</materialDesign:Card>
					</GroupBox>



						<materialDesign:Card Grid.Column="1"
						                     Background="{DynamicResource MaterialDesignDarkBackground}"
						                     Margin="16"
						                     materialDesign:ThemeAssist.Theme="Dark"
						                     UniformCornerRadius="4">
							<Grid >
                            	<Grid.RowDefinitions>
                            		<RowDefinition Height="Auto"/>
                            		<RowDefinition />
                            	</Grid.RowDefinitions>


								<materialDesign:ColorZone Margin="0"
								                          materialDesign:ShadowAssist.ShadowEdges="All"
								                          materialDesign:ShadowAssist.Darken="True"
								                          materialDesign:ShadowAssist.ShadowDepth="Depth2"
								                          Background="#FF2E5A85"
								                          Padding="16">
										<StackPanel HorizontalAlignment="Center"
										            Orientation="Horizontal">
											<RadioButton
												FontWeight="Medium" FontSize="18" FontFamily="Roboto"
												Cursor="Hand"
												x:Name="RButtonTypeEditors"
												Style="{StaticResource MaterialDesignTabRadioButton}"
												IsChecked="{Binding ActiveTool, Converter={StaticResource TypeToolBooleanConverter}, ConverterParameter=0}"
												Click="TypeEditorButtonClicked"
												Content="TYPE EDITOR"/>
											<RadioButton
												FontWeight="Medium" FontSize="18" FontFamily="Roboto"
												Cursor="Hand"
												x:Name="RButtonBatchEditor"
												Style="{StaticResource MaterialDesignTabRadioButton}"
												Click="TypeToolsButtonClicked"
												Content="BATCH TOOLS" />
											<RadioButton
												FontWeight="Medium" FontSize="18" FontFamily="Roboto"
												Cursor="Hand"
												x:Name="RButtonImport"
												Style="{StaticResource MaterialDesignTabRadioButton}"
												Click="TypeImportClicked"
												Content="IMPORT TYPES"
											/>
										</StackPanel>
								</materialDesign:ColorZone>

								<materialDesign:Card Grid.Row="1"
								                     Background="#2F3846"
								                     Margin="7" Padding="3">
									<Grid>
										<Border Visibility="{Binding TypeEditorSelected, Converter={StaticResource BooleanToVisibilityConverter}}">
											<Grid Visibility="{Binding TypeIsSelected, Converter={StaticResource BooleanToVisibilityConverter}}">
												<Grid.RowDefinitions>
													<RowDefinition Height=".25*"/>
													<RowDefinition />
												</Grid.RowDefinitions>

												<TextBox Grid.ColumnSpan="4"
														   Margin="3 5 0 0"
														   FontSize="18" FontWeight="DemiBold"
														   VerticalAlignment="Top"
														   HorizontalAlignment="Left"
														   materialDesign:TransitionAssist.DisableTransitions="True"
														   Text="{Binding CurrentTypeObj.Name}"/>

												<StackPanel
													Orientation="Horizontal" HorizontalAlignment="Right"
													Margin="0 6 3 0">

													<Menu
														Background="{DynamicResource PrimaryHueMidBrush}"
														Margin="6 0"
														materialDesign:ButtonAssist.CornerRadius="8"
														FontWeight="Medium" FontFamily="Roboto"
														Height="26"
														VerticalAlignment="Top"
														IsMainMenu="False">
														<MenuItem Header="{Binding CurrentTypeObj.Category.Name}"
														          Cursor="Hand"
														          Foreground="{StaticResource MaterialDesignLightForeground}"
														          ToolTip="Click to edit"
														          VerticalAlignment="Center"
														          VerticalContentAlignment="Center"
														          ItemsSource="{Binding CatList}">
															<MenuItem.ItemContainerStyle>
																<Style>
																	<Setter Property="MenuItem.Header" Value="{Binding Name}"/>
																	<Setter Property="MenuItem.Command" Value="{Binding Path=SetCategory,
																	        RelativeSource={RelativeSource
																	        AncestorType={x:Type local:TypesEditorView}}}"/>
																	<Setter Property="MenuItem.CommandParameter" Value="{Binding DataContext,
																	        RelativeSource={RelativeSource Self}}"/>
																</Style>
															</MenuItem.ItemContainerStyle>
														</MenuItem>
													</Menu>

													<Button
														Click="DeleteTypeClicked"
														Margin="3 0"
														Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
														HorizontalAlignment="Right"
														VerticalAlignment="Top" Width="26" Height="26"
														ToolTip="Delete this Type">
															<materialDesign:PackIcon
															Kind="TrashCan"
															Height="20"
															Width="20" />
													</Button>
												</StackPanel>

												<ScrollViewer
													Grid.Row="1"
													Padding="15">
													<Grid>
														<Grid.ColumnDefinitions>
															<ColumnDefinition />
															<ColumnDefinition />
															<ColumnDefinition />
														</Grid.ColumnDefinitions>

														<st:StackPanel MarginBetweenChildren="7">
															<TextBox
																MinWidth="125"
																Grid.ColumnSpan="2"
																VerticalAlignment="Top" HorizontalAlignment="Left"
																FontSize="18"
																Margin="2 5 15 5"
																materialDesign:HintAssist.Hint="Nominal"
																materialDesign:HintAssist.HelperTextFontSize="14"
																Style="{StaticResource MaterialDesignFloatingHintTextBox}"
																Text="{Binding CurrentTypeObj.Nominal}"/>

															<TextBox
																MinWidth="125"
																Grid.ColumnSpan="2"
																VerticalAlignment="Top" HorizontalAlignment="Left"
																FontSize="18"
																Margin="2 5 15 5"
																materialDesign:HintAssist.Hint="Lifetime"
																materialDesign:HintAssist.HelperTextFontSize="14"
																Style="{StaticResource MaterialDesignFloatingHintTextBox}"
																Text="{Binding CurrentTypeObj.Lifetime}"/>

															<TextBox
																MinWidth="125"
																Grid.ColumnSpan="2"
																VerticalAlignment="Top" HorizontalAlignment="Left"
																FontSize="18"
																Margin="2 5 15 5"
																materialDesign:HintAssist.Hint="Restock"
																materialDesign:HintAssist.HelperTextFontSize="14"
																Style="{StaticResource MaterialDesignFloatingHintTextBox}"
																Text="{Binding CurrentTypeObj.Restock}"/>

															<TextBox
																MinWidth="125"
																Grid.ColumnSpan="2"
																VerticalAlignment="Top" HorizontalAlignment="Left"
																FontSize="18"
																Margin="2 5 15 5"
																materialDesign:HintAssist.Hint="Min"
																materialDesign:HintAssist.HelperTextFontSize="14"
																Style="{StaticResource MaterialDesignFloatingHintTextBox}"
																Text="{Binding CurrentTypeObj.Min}"/>

															<TextBox
																MinWidth="125"
																Grid.ColumnSpan="2"
																VerticalAlignment="Top" HorizontalAlignment="Left"
																FontSize="18"
																Margin="2 5 15 5"
																materialDesign:HintAssist.Hint="Quantmin"
																materialDesign:HintAssist.HelperTextFontSize="14"
																Style="{StaticResource MaterialDesignFloatingHintTextBox}"
																Text="{Binding CurrentTypeObj.Quantmin}"/>

															<TextBox
																MinWidth="125"
																Grid.ColumnSpan="2"
																VerticalAlignment="Top" HorizontalAlignment="Left"
																FontSize="18"
																Margin="2 5 15 5"
																materialDesign:HintAssist.Hint="Quantmax"
																materialDesign:HintAssist.HelperTextFontSize="14"
																Style="{StaticResource MaterialDesignFloatingHintTextBox}"
																Text="{Binding CurrentTypeObj.Quantmax}"/>

															<TextBox
																MinWidth="125"
																Grid.ColumnSpan="2"
																VerticalAlignment="Top" HorizontalAlignment="Left"
																FontSize="18"
																Margin="2 5 15 5"
																materialDesign:HintAssist.Hint="Cost"
																materialDesign:HintAssist.HelperTextFontSize="14"
																Style="{StaticResource MaterialDesignFloatingHintTextBox}"
																Text="{Binding CurrentTypeObj.Cost}"/>

														</st:StackPanel>
														<st:StackPanel Grid.Column="1" MarginBetweenChildren="7">
															<CheckBox
																Margin="2 5 15 5"
																VerticalAlignment="Center"
																FontSize="18"
																Style="{StaticResource MaterialDesignCheckBox}"
																IsChecked="{Binding CurrentTypeObj.Flags.CountInCargo, Converter={StaticResource OneZeroToBooleanConverter}}">
																Count In Cargo
															</CheckBox>

															<CheckBox
																Margin="2 5 15 5"
																VerticalAlignment="Center"
																FontSize="18"
																Style="{StaticResource MaterialDesignCheckBox}"
																IsChecked="{Binding CurrentTypeObj.Flags.CountInHoarder, Converter={StaticResource OneZeroToBooleanConverter}}">
																Count In Hoarder
															</CheckBox>

															<CheckBox
																Margin="2 5 15 5"
																VerticalAlignment="Center"
																FontSize="18"
																Style="{StaticResource MaterialDesignCheckBox}"
																IsChecked="{Binding CurrentTypeObj.Flags.CountInMap, Converter={StaticResource OneZeroToBooleanConverter}}">
																Count In Map
															</CheckBox>

															<CheckBox
																Margin="2 5 15 5"
																VerticalAlignment="Center"
																FontSize="18"
																Style="{StaticResource MaterialDesignCheckBox}"
																IsChecked="{Binding CurrentTypeObj.Flags.CountInPlayer, Converter={StaticResource OneZeroToBooleanConverter}}">
																Count In Player
															</CheckBox>

															<CheckBox
																Margin="2 5 15 5"
																VerticalAlignment="Center"
																FontSize="18"
																Style="{StaticResource MaterialDesignCheckBox}"
																IsChecked="{Binding CurrentTypeObj.Flags.Crafted, Converter={StaticResource OneZeroToBooleanConverter}}">
																Crafted
															</CheckBox>

															<CheckBox
																Margin="2 5 15 5"
																VerticalAlignment="Center"
																FontSize="18"
																Style="{StaticResource MaterialDesignCheckBox}"
																IsChecked="{Binding CurrentTypeObj.Flags.Deloot, Converter={StaticResource OneZeroToBooleanConverter}}">
																Deloot
															</CheckBox>
														</st:StackPanel>
														<st:StackPanel Grid.Column="2" MarginBetweenChildren="25">
															<materialDesign:Badged
																VerticalAlignment="Bottom"
																Badge="{Binding CurrentTypeObj.UsagesCountMsg}"
																BadgePlacementMode="Right"
																BadgeColorZoneMode="Dark">
																<Button Click="EditUsages">
																	<StackPanel Orientation="Horizontal">
																		<materialDesign:PackIcon
																			Margin="0 0 3 0"
																			Kind="Pencil"
																			Width="16"
																			Height="16" VerticalAlignment="Bottom"/>
																		<TextBlock Text="Usages" VerticalAlignment="Top"/>
																	</StackPanel>
																</Button>
															</materialDesign:Badged>



															<materialDesign:Badged
																VerticalAlignment="Bottom"
																Badge="{Binding CurrentTypeObj.TiersCountMsg}"
																BadgeColorZoneMode="Dark"
																BadgePlacementMode="Right">
																<Button Click="EditTiers">
																	<StackPanel Orientation="Horizontal">
																		<materialDesign:PackIcon
																			Margin="0 0 3 0"
																			Kind="Pencil"
																			Width="16"
																			Height="16" VerticalAlignment="Bottom"/>
																		<TextBlock Text="Tiers" VerticalAlignment="Top"/>
																	</StackPanel>
																</Button>
															</materialDesign:Badged>
														</st:StackPanel>
													</Grid>
												</ScrollViewer>


											</Grid>
										</Border>
										<Border Visibility="{Binding TypeBatchToolsSelected, Converter={StaticResource BooleanToVisibilityConverter}}">

										</Border>
										<Border Visibility="{Binding TypeImporterSelected, Converter={StaticResource BooleanToVisibilityConverter}}">

										</Border>
									</Grid>
								</materialDesign:Card>

							</Grid>
						</materialDesign:Card>
				</Grid>
			</Grid>
		</Grid>
	</materialDesign:Card>

					<materialDesign:DialogHost
					x:Name="DHost"
					Style="{StaticResource MaterialDesignEmbeddedDialogHost}"
					DialogMargin="8"
					DialogTheme="Dark"
					>
					<materialDesign:DialogHost.DialogContent>
						<Border Padding="3" Width="350" Height="500">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="0.15*"/>
									<RowDefinition Height="0.15*"/>
									<RowDefinition />
									<RowDefinition Height="0.15*"/>
								</Grid.RowDefinitions>

								<TextBlock Grid.Row="0" Margin="3" FontSize="21" FontWeight="DemiBold">
									<Run Text="{Binding SubEditorTitle}"/>
									<Run Text=" Editor"/>
								</TextBlock>

								<Button Grid.Row="1"
										Style="{StaticResource MaterialDesignRaisedAccentButton}"
										Click="AddActiveEditorArrayItemClicked">
									<StackPanel Orientation="Horizontal">
										<materialDesign:PackIcon
												Kind="Create"/>
										<TextBlock Text="Add"/>
									</StackPanel>

								</Button>

								<ItemsControl Grid.Row="2"

									HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" VerticalContentAlignment="Top"
									ItemsSource="{Binding SubCollection}">
									<ItemsControl.ItemTemplate>
										<DataTemplate>
											<st:StackPanel Orientation="Vertical">

												<materialDesign:Card Margin="5">
													<st:StackPanel Orientation="Vertical">
														<TextBox Margin="3 0 3 8" FontSize="16"
																 Text="{Binding Name}" st:StackPanel.Fill="Fill"/>
														<Button Height="24" materialDesign:ButtonAssist.CornerRadius="0 0 6 6"
																Content="{materialDesign:PackIcon TrashCan, Size=18}"
																Command="{Binding Path=DeleteItem,
																		   RelativeSource={RelativeSource
																		   AncestorType={x:Type local:TypesEditorView}}}"
																CommandParameter="{Binding DataContext,
																RelativeSource={RelativeSource Self}}"/>
													</st:StackPanel>
												</materialDesign:Card>

											</st:StackPanel>
										</DataTemplate>
									</ItemsControl.ItemTemplate>
								</ItemsControl>



								<StackPanel Orientation="Horizontal" Grid.Row="3" HorizontalAlignment="Right" VerticalAlignment="Bottom">
									<Button Content="Ok" Margin="3 0" Click="ApplySubTypeChangesClicked"/>
									<Button Content="Cancel" Margin="3 0" Click="CancelSubTypeChangesClicked"/>
								</StackPanel>

							</Grid>
						</Border>
					</materialDesign:DialogHost.DialogContent>
			</materialDesign:DialogHost>
	</Grid>
</views:BaseView>
